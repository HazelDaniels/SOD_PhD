order = c("Nden", "Prad", "Pmen"),
ylab = "Average reaction size (cm)", xlab = "Species")
ggline(Inoc.data, x = "Species", y = "Inoc_2_avg",
add = c("mean_se", "jitter"),
order = c("Nden", "Prad", "Pmen"),
ylab = "Average reaction size (cm)", xlab = "Species")
# ANOVA
Ctrl.anova <- aov(Inoc_2_avg ~ Species, data = Inoc.data)
summary(Ctrl.anova)
View(Ctrl.anova)
View(Inoc.anova)
# ANOVA
Within.anova <- aov(Inoc_1_avg ~ Inoc_2_avg, data = Inoc.data$Species)
# Tukey pairwise comparisons
TukeyHSD(Inoc.anova)
# validity tests
plot(Inoc.anova, 1)
levene.Test(Inoc_1_avg ~ Species, data = Inoc.data)
install.packages("car")
library(car)
levene.Test(Inoc_1_avg ~ Species, data = Inoc.data)
leveneTest(Inoc_1_avg ~ Species, data = Inoc.data)
# ANOVA w/o assumption of equal variance
oneway.test(Inoc_1_avg ~ Species, data = Inoc.data)
pairwise.t.test(Inoc.data$Inoc_1_avg, Inoc.data$Specie, p.adjust.method = "BH", pool.sd = FALSE)
pairwise.t.test(Inoc.data$Inoc_1_avg, Inoc.data$Species, p.adjust.method = "BH", pool.sd = FALSE)
plot(Inoc.anova, 2)
# pairwise comparison w/o
pairwise.t.test(Inoc.data$Inoc_1_avg, Inoc.data$Species, p.adjust.method = "BH", pool.sd = FALSE)
# Tukey pairwise comparisons
TukeyHSD(Ctrl.anova)
# testing assumption of equal variance
plot(Ctrl.anova, 1)
leveneTest(Inoc_2_avg ~ Species, data = Ctrl.data)
leveneTest(Inoc_2_avg ~ Species, data = Inoc.data)
# ANOVA w/o assumption of equal variance
oneway.test(Inoc_2_avg ~ Species, data = Inoc.data)
# pairwise comparison w/o pooled variance
pairwise.t.test(Inoc.data$Inoc_2_avg, Inoc.data$Species, p.adjust.method = "BH", pool.sd = FALSE)
# normality test
plot(Ctrl.anova, 2)
# Kruskal-Wallis
kruskal.test(Inoc_2_avg ~ Species, data = Inoc.data)
# frequency table
table(Inoc.data$Inoc_1_avg, Inoc.data$Inoc_2_avg)
View(Inoc.data)
# ANOVA
Within.anova <- aov(Species ~ Inoc_1_avg * Inoc_2_avg, data = Inoc.data)
group_by(Inoc.data, Inoc_1) %>%
summarise(
count = n(),
mean = mean(Inoc_1_avg, na.rm = TRUE),
sd = sd(Inoc_1_avg, na.rm = TRUE),
median = median(Inoc_1_avg, na.rm = TRUE)
)
ggboxplot(Inoc.data, x = "Species", y = "Inoc_1_avg",
color = "Species", palette = c("#00AFBB", "#E7B800", "#FC4E07"),
order = c("Nden", "Prad", "Pmen"),
ylab = "Average lesion size (cm)", xlab = "Species")
# visualize
ggboxplot(Inoc.data, x = "Inoc_1", y = "Inoc_1_avg",
color = "Species", palette = c("#00AFBB", "#FC4E07"),
order = c("EU1", "NA1"),
ylab = "Average lesion size (cm)", xlab = "Lineage")
# visualize
ggboxplot(Inoc.data, x = "Inoc_1", y = "Inoc_1_avg",
color = "Species", palette = c("#00AFBB", "#E7B800", "#FC4E07"),
order = c("EU1", "NA1"),
ylab = "Average lesion size (cm)", xlab = "Lineage")
ggboxplot(Inoc.data, x = "Inoc_1", y = "Inoc_1_avg",
color = "Lineage", palette = c("#00AFBB", "#FC4E07"),
order = c("EU1", "NA1"),
ylab = "Average lesion size (cm)", xlab = "Lineage")
ggboxplot(Inoc.data, x = "Inoc_1", y = "Inoc_1_avg",
color = "Inoc_1", palette = c("#00AFBB", "#FC4E07"),
order = c("EU1", "NA1"),
ylab = "Average lesion size (cm)", xlab = "Lineage")
## by lineage by species
ggboxplot(Inoc.data, x = "Inoc_1", y = "Inoc_1_avg",
color = "Species", palette = c("#00AFBB", "#E7B800", "#FC4E07"),
order = c("EU1", "NA1"),
ylab = "Average lesion size (cm)", xlab = "Lineage")
ggline(Inoc.data, x = "Species", y = "Inoc_1_avg",
add = c("mean_se", "jitter"),
order = c("Nden", "Prad", "Pmen"),
ylab = "Average lesion size (cm)", xlab = "Species")
ggline(Inoc.data, x = "Inoc_1", y = "Inoc_1_avg",
add = c("mean_se", "jitter"),
order = c("EU1", "NA1"),
ylab = "Average lesion size (cm)", xlab = "Lineage")
# ANOVA
Lin.anova <- aov(Inoc_1_avg ~ Inoc_1, data = Inoc.data)
summary(Lin.anova)
# Tukey pairwise comparisons
TukeyHSD(Lin.anova)
# testing assumption of equal variance
plot(Lin.anova, 1)
leveneTest(Inoc_1_avg ~ Inoc_1, data = Inoc.data)
t
# ANOVA w/o assumption of equal variance
oneway.test(Inoc_1_avg ~ Inoc_1, data = Inoc.data)
# pairwise comparison w/o pooled variance
pairwise.t.test(Inoc.data$Inoc_1_avg, Inoc.data$Inoc_1, p.adjust.method = "BH", pool.sd = FALSE)
# normality test
plot(Lin.anova, 2)
#radiata
t.test(Prad$Inoc_2_avg, Prad$Inoc_1_avg, var.equal = FALSE)
#tanoak
t.test(Nden$Inoc_2_avg, Nden$Inoc_1_avg, var.equal = FALSE)
#doug-fir
t.test(Pmen$Inoc_2_avg, Pmen$Inoc_1_avg, var.equal = FALSE)
knitr::opts_chunk$set(echo = TRUE)
# reading in file
Field.data <- read_xlsx("C:/Users/dixie/Google Drive/_Ph.D. Forestry/Research/2018.11_RadiataInoculation/2019.01.14_LogInoculationDataSheet.xlsx", sheet=2)
Field.data
Field.data$Site <- as.character(as.numeric(Field.data$Site))
# averaging DIBs
Field.data$DIB_avg <- rowMeans(Field.data[c('DIB_1_cm', 'DIB_2')], na.rm=TRUE)
summary(Field.data)
# data manipulation
Field_Nden <- subset(Field.data, Species == "Nden")
Field_Pmen <- subset(Field.data, Species == "Pmen")
Field_Prad <- subset(Field.data, Species == "Prad")
View(Field.data)
View(Inoc.data)
group_by(Inoc.data, Culture) %>%
summarise(
count = n(),
mean = mean(Culture, na.rm = TRUE),
sd = sd(Culture, na.rm = TRUE),
median = median(Culture, na.rm = TRUE)
)
group_by(Inoc.data, CultBin) %>%
summarise(
count = n(),
mean = mean(CultBin, na.rm = TRUE),
sd = sd(CultBin, na.rm = TRUE),
median = median(CultBin, na.rm = TRUE)
)
group_by(Inoc.data, Species) %>%
summarise(
count = n(),
mean = mean(CultBin, na.rm = TRUE),
sd = sd(CultBin, na.rm = TRUE),
median = median(CultBin, na.rm = TRUE)
)
# calculate reisolation rate for each species
Nden.RIR <- as.numeric(Inoc.data$Species = Nden)
# calculate reisolation rate for each species
Nden.RIR <- mean(subset(Inoc.data, Species = "Nden"))
# calculate reisolation rate for each species
Nden.RIR <- mean(subset(Inoc.data$CultBin, Species = "Nden"))
# calculate reisolation rate for each species
Nden.RIR <- count(subset(Inoc.data, Species = "Nden"), vars = "Culture")
View(Nden.RIR)
# calculate reisolation rate for each species
Nden.RIR <- count(which(Species = "Nden" & CultBin = 1))/count(which(Species = "Nden"))
# calculate reisolation rate for each species
Nden.RIR <- count(which(Inoc.data$Species = "Nden" & Inoc.data$CultBin = "1"))/count(which(Inoc.data$Species = "Nden"))
# calculate reisolation rate for each species
Nden.RIR <- count(which(Inoc.data$Species=="Nden" & Inoc.data$CultBin = "1"))/count(which(Inoc.data$Species = "Nden"))
# calculate reisolation rate for each species
Nden.RIR <- count(which(Inoc.data$Species=="Nden" & Inoc.data$CultBin = "1")) /
count(which(Inoc.data$Species = "Nden"))
count(subset(Inoc.data$Species = "Nden"))
count(Inoc.data$Species = "Nden")
count(Inoc.data$Species="Nden")
count(Inoc.data$Species)
summarize(count(Inoc.data$Species))
# calculate reisolation rate for each species
Nden.RIR <- subset(Inoc.data, Species = "Nden" | Culture = "Y")
# calculate reisolation rate for each species
Nden.RIR <- subset(Inoc.data, Species = "Nden")
View(Nden.RIR)
# calculate reisolation rate for each species
Nden.RIR <- subset(Inoc.data, Species = "Nden")
View(Nden.RIR)
Pmen.RIR <- subset(Inoc.data, Species = "Pmen")
# calculate reisolation rate for each species
Nden.RIR <- subset(Inoc.data, Inoc.data$Species = "Nden")
count(Nden)
count(Pmen)
count(Prad)
# calculate reisolation rate for each species
Nden.RIR <- subset(Nden, Culture == "Y")
View(Nden.RIR)
# calculate reisolation rate for each species
Nden.RIR <- count(subset(Nden, Culture == "Y")) / count(Nden)
View(Nden.RIR)
# calculate reisolation rate for each species
Nden.RIR <- count(subset(Nden, Culture == "Y")) / count(Nden)
Pmen.RIR <- count(subset(Pmen, Culture == "Y")) / count(Pmen)
Prad.RIR <- count(subset(Prad, Culture == "Y")) / count(Prad)
# create data frame for analysis
colA <- c("Nden", "Pmen", "Prad")
colB <- c(count(subset(Nden, Culture == "Y")),
count(subset(Pmen, Culture == "Y")),
count(subset(Prad, Culture == "Y")))
colC <- c(count(Nden), count(Pmen), count(Prad))
colD <- C(Nden.RIR, Pmen.RIR, Prad.RIR)
RIR.data <- data.frame(Species=colA, Reisolated=colB, Total=colC)
View(RIR.data)
colB <- c(count(subset(Nden, Culture == "Y")), count(subset(Pmen, Culture == "Y")), count(subset(Prad, Culture == "Y")))
colC <- c(count(Nden), count(Pmen), count(Prad))
RIR.data <- data.frame(Species=colA, Reisolated=colB, Total=colC)
View(RIR.data)
View(Nden)
View(Pmen)
View(Prad)
# create data frame for analysis
colA <- c("Nden", "Pmen", "Prad")
colB <- c("10", "2", "15")
colC <- c("11", "", "17")
RIR.data <- data.frame(Species=colA, Reisolated=colB, Total=colC)
View(RIR.data)
View(Pmen)
colC <- c("11", "10", "17")
RIR.data <- data.frame(Species=colA, Reisolated=colB, Total=colC)
View(RIR.data)
RIR.data$RIR <- RIR.data$Reisolated / RIR.data$Total
RIR.data
View(RIR.data)
RIR.data <- tbl_df(RIR.data)
RIR.data <- RIR.data %>%   mutate(RIR=Reisolated/Total)
RIR.data <- RIR.data %>% mutate(RIR=Reisolated/Total)
summary(RIR.data)
View(RIR.data)
RIR.data$RIR <- as.numeric(RIR.data$Reisolated) / as.numeric(RIR.data$Total)
View(RIR.data)
View(RIR.data)
RIR.data$RIR <- c("=10/11", "=2/10", "=15/17")
RIR.data$RIR <- c("10/11", "2/10", "15/17")
View(RIR.data)
10/11
2/10
15/17
colD <- c("0.9090909", "0.2", "0.8823529")
RIR.data <- data.frame(Species=colA, Reisolated=colB, Total=colC, RIR=colD)
View(RIR.data)
# summary of RIR
group_by(RIR.data, Species) %>%
summarise(
count = n(),
)
library(reshape2)
install.packages("reshape2")
library(reshape2)
# aggregate data
RIR <- aggregate(cbind(Culture)~Species, Inoc.data, sum)
knitr::opts_chunk$set(echo = TRUE)
# reading in file
library(readxl)
Inoc.data <- read_xlsx("C:/Users/dixie/Google Drive/_Ph.D. Forestry/Research/2018.11_RadiataInoculation/2019.01.14_LogInoculationDataSheet.xlsx", sheet=1)
#convert characters to numeric
Inoc.data$Inoc_1_m1_cm <- as.numeric(as.character(Inoc.data$Inoc_1_m1_cm))
Inoc.data$Inoc_1_m2 <- as.numeric(as.character(Inoc.data$Inoc_1_m2))
Inoc.data$Inoc_1_m3 <- as.numeric(as.character(Inoc.data$Inoc_1_m3))
Inoc.data$Inoc_1_m4 <- as.numeric(as.character(Inoc.data$Inoc_1_m4))
Inoc.data$Inoc_1_avg <- as.numeric(as.character(Inoc.data$Inoc_1_avg))
Inoc.data$Inoc_2_m1_cm <- as.numeric(as.character(Inoc.data$Inoc_2_m1_cm))
Inoc.data$Inoc_2_m2 <- as.numeric(as.character(Inoc.data$Inoc_2_m2))
Inoc.data$Inoc_2_m3 <- as.numeric(as.character(Inoc.data$Inoc_2_m3))
Inoc.data$Inoc_2_m4 <- as.numeric(as.character(Inoc.data$Inoc_2_m4))
Inoc.data$Inoc_2_avg <- as.numeric(as.character(Inoc.data$Inoc_2_avg))
Inoc.data$DIB_avg <- rowMeans(Inoc.data[c('DIB_1_cm', 'DIB_2')], na.rm=TRUE)
# data manipulation
Nden <- subset(Inoc.data, Species == "Nden")
Pmen <- subset(Inoc.data, Species == "Pmen")
Prad <- subset(Inoc.data, Species == "Prad")
# aggregate data
RIR <- aggregate(cbind(Culture)~Species, Inoc.data, sum)
# aggregate data
RIR <- aggregate(cbind(CultBin)~Species, Inoc.data, sum)
View(RIR)
library(reshape2)
melt(RIR)
# aggregate data
RIR <- aggregate(cbind(CultBin, Species)~Species, Inoc.data, sum)
# aggregate data
RIR <- aggregate(cbind(CultBin, count(Species))~Species, Inoc.data, sum)
# aggregate data
RIR <- aggregate(cbind(CultBin=="1",CultBin=="0")~Species, Inoc.data, sum)
library(reshape2)
melt(RIR)
# aggregate data
RIR <- aggregate(cbind(CultBin=="1",CultBin=="0")~Culture, Inoc.data, sum)
melt(RIR)
# aggregate data
RIR <- aggregate(cbind(CultBin=="1",CultBin=="0")~Species, Inoc.data, sum)
melt(RIR)
# aggregate data
RIR <- aggregate(Species, Culture=="Y", Inoc.data, sum)
# aggregate data
RIR <- aggregate(Inoc.data$Species, Culture=="Y", Inoc.data, sum)
# aggregate data
RIR <- aggregate(Inoc.data, Culture=="Y", Inoc.data, sum)
# aggregate data
RIR <- aggregate(CultBin=="0"~Species, Inoc.data, sum)
melt(RIR)
# aggregate data
RIR <- aggregate(CultBin + Culture~Species, Inoc.data, sum)
# aggregate data
RIR <- aggregate(Culture~Species, Inoc.data, sum)
# aggregate data
RIR <- aggregate(CultBin~Species, Inoc.data, sum)
melt(RIR)
View(Inoc.data)
# aggregate data
RIR <- aggregate(CultBin~Species, Inoc.data, sum)
melt(RIR)
# create data frame
colA <- c("Nden","Pmen","Prad")
colB <- c(11, 10, 17)
colC <- c(10, 2, 15)
RIR <- data.frame(Species=colA, Total=colB, Pos=colC)
View(RIR)
RIR.data <- data.frame(Species=colA, Total=colB, Pos=colC)
knitr::opts_chunk$set(echo = TRUE)
# reading in file
library(readxl)
Inoc.data <- read_xlsx("C:/Users/dixie/Google Drive/_Ph.D. Forestry/Research/2018.11_RadiataInoculation/2019.01.14_LogInoculationDataSheet.xlsx", sheet=1)
#convert characters to numeric
Inoc.data$Inoc_1_m1_cm <- as.numeric(as.character(Inoc.data$Inoc_1_m1_cm))
Inoc.data$Inoc_1_m2 <- as.numeric(as.character(Inoc.data$Inoc_1_m2))
Inoc.data$Inoc_1_m3 <- as.numeric(as.character(Inoc.data$Inoc_1_m3))
Inoc.data$Inoc_1_m4 <- as.numeric(as.character(Inoc.data$Inoc_1_m4))
Inoc.data$Inoc_1_avg <- as.numeric(as.character(Inoc.data$Inoc_1_avg))
Inoc.data$Inoc_2_m1_cm <- as.numeric(as.character(Inoc.data$Inoc_2_m1_cm))
Inoc.data$Inoc_2_m2 <- as.numeric(as.character(Inoc.data$Inoc_2_m2))
Inoc.data$Inoc_2_m3 <- as.numeric(as.character(Inoc.data$Inoc_2_m3))
Inoc.data$Inoc_2_m4 <- as.numeric(as.character(Inoc.data$Inoc_2_m4))
Inoc.data$Inoc_2_avg <- as.numeric(as.character(Inoc.data$Inoc_2_avg))
Inoc.data$DIB_avg <- rowMeans(Inoc.data[c('DIB_1_cm', 'DIB_2')], na.rm=TRUE)
# data manipulation
Nden <- subset(Inoc.data, Species == "Nden")
Pmen <- subset(Inoc.data, Species == "Pmen")
Prad <- subset(Inoc.data, Species == "Prad")
# create data frame
colA <- c("Nden","Pmen","Prad")
colB <- c(11, 10, 17)
colC <- c(10, 2, 15)
RIR.data <- data.frame(Species=colA, Total=colB, Pos=colC)
RIR.data$RIR <- Pos/Total
RIR.data$RIR <- RIR.data$Pos/RIR.data$Total
View(RIR.data)
summary(RIR.data)
# create data frame
colA <- c("Nden","Pmen","Prad")
colB <- c(10, 2, 15)
colC <- c(1, 8, 2)
colD <- c(11, 10, 17)
RIR.data <- data.frame(Species=colA, Pos=colB, Neg=colC, Total=colD)
RIR.data$RIR <- RIR.data$Pos/RIR.data$Total
View(RIR.data)
# visualize
RIR.t <- as.table(as.matrix(RIR.data))
balloonplot(t(RIR.t), main ="RIR.data", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
library(gplots)
install.packages("gplots")
library(gplots)
balloonplot(t(RIR.t), main ="RIR.data", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
balloonplot(t(RIR.t), main ="Species", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
balloonplot(t(RIR.t), main ="test", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
View(RIR.data)
# analyze
RIR.chi <- chisq.test(RIR.data)
colE <- c(0.9090909, 0.2000000, 0.8823529)
RIR.data <- data.frame(Species=colA, Pos=colB, Neg=colC, Total=colD, RIR=colE)
# analyze
RIR.chi <- chisq.test(RIR.data)
RIR.data <- data.frame(Species=colA, Pos=colB, Neg=colC, Total=colD)
RIR.data$RIR <- RIR.data$Pos/RIR.data$Total
View(RIR.data)
# analyze
setDT(RIR.data)
# analyze
require(data.table)
setDT(RIR.data)
RIR.chi <- chisq.test(RIR.data)
# analyze
RIR.table <- table(RIR.data)
RIR.chi <- chisq.test(RIR.table)
RIR.chi <- chisq.test(RIR.t)
RIR.chi <- chisq.test(RIR.data)
View(RIR.data)
# analyze
table(RIR.data$Species, RIR.data$RIR)
RIR.table <- matrix (c(10, 1, 11, 2, 8, 10, 15, 2, 17), nrow = 3, ncol = 3, byrow = TRUE)
rownames(RIR.table) <- c("Nden", "Pmen", "Prad")
colnames(RIR.table) <- c("Pos", "Neg", "Total")
RIR.table
RIR.table$RIR <- RIR.table$Pos/RIR.table$Total
RIR.table$RIR <- Pos/Total
RIR.table <- matrix (c(10, 1, 11, 0.9090909, 2, 8, 10, 0.2, 15, 2, 17, 0.8823529), nrow = 3, ncol = 4, byrow = TRUE)
rownames(RIR.table) <- c("Nden", "Pmen", "Prad")
colnames(RIR.table) <- c("Pos", "Neg", "Total", "RIR")
RIR.table
RIR.chi <- chisq.test(RIR.table)
RIR.table <- matrix (c(0.9090909, 0.2, 0.8823529), nrow = 3, ncol = 1, byrow = TRUE)
rownames(RIR.table) <- c("Nden", "Pmen", "Prad")
colnames(RIR.table) <- c("RIR")
RIR.table
# analyze
RIR.chi <- chisq.test(RIR.table)
RIR.table <- matrix (c(10, 1, 2, 8, 15, 2), nrow = 3, ncol = 2, byrow = TRUE)
rownames(RIR.table) <- c("Nden", "Pmen", "Prad")
colnames(RIR.table) <- c("Pos", "Neg")
RIR.table
# analyze
RIR.chi <- chisq.test(RIR.table)
# analyze
RIR.chi <- chisq.test(RIR.table, simulate.p.value = TRUE)
View(RIR.chi)
RIR.chi
# analyze
RIR.chi.sim <- chisq.test(RIR.table, simulate.p.value = TRUE)
RIR.chi.sim
# analyze
RIR.chi <- chisq.test(RIR.table)
RIR.chi
View(Inoc.data)
EU1 <- subset(Inoc.data, Inoc_1 == "EU1")
NA1 <- subset(Inoc.data, Inoc_1 == "NA1")
Cult_null <- glm(CultBin~1, family = binomial, data=Inoc.data)
Cult_full <- glm(CultBin~Species*DIB_avg*Bark*Inoc_1, family=binomial, data=Inoc.data)
step(Cult_null, scope = list(upper=Cult_full), direction="both", test="Chisq", data=Inoc.data)
View(EU1)
View(NA1)
# create contingency table
RIR.tab.lin <- matrix (c(14, 13, 5, 6), nrow = 2, ncol = 2, byrow = TRUE)
rownames(RIR.tab.lin) <- c("EU1", "NA1")
colnames(RIR.tab.lin) <- c("Pos", "Neg")
RIR.table
RIR.tab.lin
# create contingency table
RIR.tab.lin <- matrix (c(14, 13, 5, 6), nrow = 2, ncol = 2)
rownames(RIR.tab.lin) <- c("EU1", "NA1")
colnames(RIR.tab.lin) <- c("Pos", "Neg")
RIR.tab.lin
# chi-square analysis
RIR.chi.lin <- chisq.test(RIR.tab.lin)
RIR.chi.lin
RIR.chi.lin.sim <- chisq.test(RIR.tab.lin, simulate.p.value = TRUE)
RIR.chi.lin.sim
knitr::opts_chunk$set(echo = TRUE)
# reading in file
library(readxl)
Inoc.data <- read_xlsx("2019.01.14_LogInoculationDataSheet.xlsx", sheet=1)
knitr::opts_chunk$set(echo = TRUE)
# reading in file
library(readxl)
Inoc.data <- read_xlsx("2019.01.14_LogInoculationDataSheet.xlsx", sheet=1)
#convert characters to numeric
Inoc.data$Inoc_1_m1_cm <- as.numeric(as.character(Inoc.data$Inoc_1_m1_cm))
Inoc.data$Inoc_1_m2 <- as.numeric(as.character(Inoc.data$Inoc_1_m2))
Inoc.data$Inoc_1_m3 <- as.numeric(as.character(Inoc.data$Inoc_1_m3))
Inoc.data$Inoc_1_m4 <- as.numeric(as.character(Inoc.data$Inoc_1_m4))
Inoc.data$Inoc_1_avg <- as.numeric(as.character(Inoc.data$Inoc_1_avg))
Inoc.data$Inoc_2_m1_cm <- as.numeric(as.character(Inoc.data$Inoc_2_m1_cm))
Inoc.data$Inoc_2_m2 <- as.numeric(as.character(Inoc.data$Inoc_2_m2))
Inoc.data$Inoc_2_m3 <- as.numeric(as.character(Inoc.data$Inoc_2_m3))
Inoc.data$Inoc_2_m4 <- as.numeric(as.character(Inoc.data$Inoc_2_m4))
Inoc.data$Inoc_2_avg <- as.numeric(as.character(Inoc.data$Inoc_2_avg))
Inoc.data$DIB_avg <- rowMeans(Inoc.data[c('DIB_1_cm', 'DIB_2')], na.rm=TRUE)
# data manipulation
Nden <- subset(Inoc.data, Species == "Nden")
Pmen <- subset(Inoc.data, Species == "Pmen")
Prad <- subset(Inoc.data, Species == "Prad")
EU1 <- subset(Inoc.data, Inoc_1 == "EU1")
NA1 <- subset(Inoc.data, Inoc_1 == "NA1")
View(Inoc.data)
library(vcfR)
library(tidyverse)
library(vcfR)
library(tidyverse)
vcf <- read.vcfR("ramorum.vcf.gz")
raw.vcf <- nrow(vcf)
View(vcf)
vcf@meta
vcf@meta %>% head()
vcf@fix %>% head()
View(vcf@meta)
vcf@gt %>% head()
dp.vc <- extract.gt(vcf, element = "DP", as.numeric = T)
gt.vc <- extract.gt(vcf, element = "GT", as.numeric = T)
## dp.vc backup
dp.vc.bk <- dp.vc
gt.vc.bk <- gt.vc
head(dp.vc)
head(gt.vc)
## Creating quantiles based in the lower 5% and the higher 95%
sums <- apply(dp.vc.bk, 2, function (x) quantile(x, probs=c(0.05, 0.50, 0.95), na.rm = T))
head(sums)
## Creating quantiles based in the lower 5% and the higher 95%
sums <- apply(dp.vc.bk, 1, function (x) quantile(x, probs=c(0.05, 0.50, 0.95), na.rm = T))
## Creating quantiles based in the lower 5% and the higher 95%
sums <- apply(dp.vc.bk, 2, function (x) quantile(x, probs=c(0.05, 0.50, 0.95), na.rm = T))
## Here is where we add the min depth (10x)
sums[1,][sums[1,] < 10] <- 10
dp.all.2 <- sweep(dp.vc.bk, MARGIN=2, FUN="-", sums[1,])
dp.vc[dp.all.2 <= 0] <- NA
dp.all.2 <- sweep(dp.vc.bk, MARGIN=2, FUN="-", sums[3,])
dp.vc[dp.all.2 > 0] <- NA
# Changing GT
vcf@gt[,-1][is.na(dp.vc)] <- NA
head(vcf@gt)
mq <- extract.info(vcf, element = "MQ", as.numeric = T)
hist(mq)
